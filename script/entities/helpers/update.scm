(define (generate-update-track-player frames time)
  (lambda (e data)
    (let ((ex (get-entity-x e))
          (ey (get-entity-y e))
          (ew (get-entity-w e))
          (eh (get-entity-h e))
          (px (get-player-x))
          (py (get-player-y))
          (pw (get-player-stat "width"))
          (ph (get-player-stat "height")))
      (if (is-unbroken-line (+ ex (/ ew 2)) (+ ey (/ eh 2)) (+ px (/ pw 2)) py)
        (let ((xdiff (- (+ px (/ pw 2)) (+ ex (/ ew 2))))
              (ydiff (- py (+ ey (/ eh 2))))
              (theta (calculate-angle (+ ex (/ ew 2)) (+ ey (/ eh 2)) (+ px (/ pw 2)) py)))
          (set-entity-xv e (* (cos theta) (get-entity-speed e)))
          (set-entity-yv e (* (sin theta) (get-entity-speed e)))
          (let ((t (get-entity-texture e)))
           (if (zero? (car data))
             (set-sheet-column t (modulo (+ (get-sheet-column t) 1) frames)))))
        (begin
          (set-entity-xv e 0)
          (set-entity-yv e 0)
          (set-sheet-column (get-entity-texture e) 0)))
      (cons (modulo (+ (car data) 1) time) (cdr data)))))
